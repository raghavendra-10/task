{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAGHAVENDRA\\\\OneDrive\\\\Desktop\\\\task\\\\task\\\\src\\\\components\\\\Patients.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setPatients } from './state/actions';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patients = ({\n  patients,\n  setPatients\n}) => {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n        setPatients(response.data);\n      } catch (error) {\n        console.error('Error fetching patient data:', error);\n      }\n    };\n    fetchData();\n  }, [setPatients]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-md shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full divide-y divide-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"bg-white divide-y divide-gray-200\",\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap\",\n            children: patient.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap\",\n            children: patient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap\",\n            children: patient.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap\",\n            children: patient.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap\",\n            children: patient.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Patients, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Patients;\nconst mapStateToProps = state => ({\n  patients: state.patients.patients\n});\nconst mapDispatchToProps = {\n  setPatients\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Patients);\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["React","useEffect","connect","setPatients","axios","jsxDEV","_jsxDEV","Patients","patients","_s","fetchData","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","id","name","username","email","phone","_c","mapStateToProps","state","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/OneDrive/Desktop/task/task/src/components/Patients.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPatients } from './state/actions';\r\nimport axios from 'axios';\r\n\r\nconst Patients = ({ patients, setPatients }) => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        setPatients(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching patient data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setPatients]);\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-md shadow-md\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Patients</h1>\r\n      <table className=\"min-w-full divide-y divide-gray-200\">\r\n        <thead className=\"bg-gray-50\">\r\n          <tr>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Username</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Phone</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n          {patients.map((patient) => (\r\n            <tr key={patient.id}>\r\n              <td className=\"px-6 py-4 whitespace-nowrap\">{patient.id}</td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap\">{patient.name}</td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap\">{patient.username}</td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap\">{patient.email}</td>\r\n              <td className=\"px-6 py-4 whitespace-nowrap\">{patient.phone}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    patients: state.patients.patients,\r\n  });\r\n  \r\n  const mapDispatchToProps = {\r\n    setPatients,\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Patients);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}